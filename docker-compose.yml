version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: everapharm-db
    environment:
      POSTGRES_USER: everapharm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: everapharm_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - everapharm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U everapharm_user"]
      interval: 60s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: everapharm-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://everapharm_user:${DB_PASSWORD}@postgres:5432/everapharm_prod
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3000
      CORS_ORIGIN: ${CORS_ORIGIN}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - everapharm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 120s
      timeout: 15s
      retries: 2
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          memory: 256M

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000/api}
      # Alternative: Use simple Dockerfile if styles aren't loading
      # dockerfile: apps/web/Dockerfile.simple
    container_name: everapharm-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000/api}
    ports:
      - "3001:3000"
    networks:
      - everapharm-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: everapharm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-simple.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - web
    networks:
      - everapharm-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M

networks:
  everapharm-network:
    driver: bridge

volumes:
  postgres_data: 